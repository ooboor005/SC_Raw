repeat task.wait() until game:IsLoaded() and game.CreatorId == 7381705
repeat task.wait() until game:GetService("Players").LocalPlayer.PlayerGui.loading.Enabled == false


local waitFn = task.wait
local httpService = game:GetService("HttpService")
local postRequest = getgenv().request or function(...) return ... end
local getrenvFn = getgenv().getrenv or function(...) return ... end
local env = getrenvFn()

if type(env.task) == "table" and typeof(env.task.wait) == "function" then
	waitFn = env.task.wait
end

if type(env.task.spawn) == "function" then
	env.task.spawn(function()
		while true do
			waitFn()
			local x, p = pcall(function()
				local player = game:GetService("Players").LocalPlayer
				local gui = player.PlayerGui
				local inventory = gui.hud.safezone.backpack.inventory.scroll
				local hotbar = gui.hud.safezone.backpack.hotbar
				local rodsScroll = gui.hud.safezone.equipment.rods.scroll.safezone
				local fishList, rodsList = {}, {}
				local enchantRelicCount, baitCrateCount = 0, 0
				local function parseStack(text)
					local result = ""
					string.gsub(text, "%d+", function(d) result = result .. d end)
					return tonumber(result) or 1
				end
				local function parseWeight(text)
					local result = ""
					string.gsub(text, "%d[%d.,]*", function(d) result = result .. d end)
					return tonumber(result) or 1
				end
				local function cleanName(name)
					if string.find(name, "</font>") then
						for match in (name .. "'>"):gmatch("(.-)'%>") do
							if match ~= "" then
								return string.gsub(match, "</font>", "")
							end
						end
					end
					return name
				end
				local function scanItems(container)
					for _, item in pairs(container:GetChildren()) do
						if item:FindFirstChild("itemname") then
							local itemName = item.itemname.Text
							local itemStack = item:FindFirstChild("stack") and item.stack.Text or "1"

							if string.find(itemName, "Enchant Relic") then
								enchantRelicCount += parseStack(itemStack)
							elseif string.find(itemName, "Quality Bait Crate") then
								baitCrateCount += parseStack(itemStack)
							elseif item:FindFirstChild("weight") and item.weight.Text ~= "" then
								local weight = parseWeight(item.weight.Text)
								local count = parseStack(itemStack)
								local name = cleanName(itemName)

								table.insert(fishList, {
									name = name,
									weight = weight,
									count = count
								})
							end
						end
					end
				end
				scanItems(hotbar)
				scanItems(inventory)
				for _, frame in pairs(rodsScroll:GetChildren()) do
					if frame:IsA("Frame") then
						table.insert(rodsList, frame.Name)
					end
				end
                local moneyText = ""
                if game.PlaceId ~= 72907489978215 then 
                    moneyText = player.leaderstats["C$"].Value
                else 
                    moneyText = player.leaderstats["E$"].Value
                end
				local money = parseStack(moneyText)
				postRequest({
					Url = "http://45.136.254.74:8080/api/user",
					Method = "POST",
					Headers = { ["Content-Type"] = "application/json" },
					Body = httpService:JSONEncode({
						account = player.Name,
						level = player.leaderstats.Level.Value,
						money = money,
						fish = fishList,
						rods = rodsList,
						relic = enchantRelicCount,
						bait = baitCrateCount,
						machine = "PC-13"
					})
				})
				task.wait(3)
			end)
		end
	end)
end
