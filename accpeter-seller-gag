-- ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏Å‡∏°‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°
if not game:IsLoaded() then game.Loaded:Wait() end

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local GuiService = game:GetService("GuiService")
local VIM = game:GetService("VirtualInputManager")

-- ‡∏£‡∏≠ LocalPlayer ‡πÉ‡∏´‡πâ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡πà‡∏≠‡∏ô
while not Players.LocalPlayer do task.wait() end
local LocalPlayer = Players.LocalPlayer

-- ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏£‡∏î
local LimitTrade = 1
local Trade = 0
local IsTradeDone = false

-- ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏´‡∏•‡∏∏‡∏î
LocalPlayer.Idled:Connect(function()
	local vu = game:GetService("VirtualUser")
	vu:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
	task.wait(1)
	vu:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
end)

-- üîÅ ‡∏Å‡∏£‡∏∞‡∏ï‡∏∏‡πâ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö UI (Enter)
VIM:SendKeyEvent(true, 13, false, game)
task.wait()
VIM:SendKeyEvent(false, 13, false, game)

-- ‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå Trade ‡πÄ‡∏™‡∏£‡πá‡∏à
local NotificationFrame = LocalPlayer.PlayerGui:WaitForChild("Top_Notification"):WaitForChild("Frame")
NotificationFrame.ChildAdded:Connect(function(frame)
	if frame:FindFirstChild("TextLabel") and frame.TextLabel.Text == "Trade completed!" then
		IsTradeDone = true
	end
end)

-- ‚úÖ ‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏£‡∏î‡∏´‡∏≤‡∏Å‡∏û‡∏ö‡∏õ‡∏∏‡πà‡∏° Accept
local function TryAcceptGift()
	local giftGui = LocalPlayer.PlayerGui:FindFirstChild("Gift_Notification")
	if giftGui and giftGui:FindFirstChild("Frame") then
		for _, child in pairs(giftGui.Frame:GetChildren()) do
			if child:IsA("ImageLabel") then
				local accept = child:FindFirstChild("Holder")
					and child.Holder:FindFirstChild("Frame")
					and child.Holder.Frame:FindFirstChild("Accept")
				if accept then
					IsTradeDone = false
					local maxAttempt, count = 30, 0

					repeat
						count += 1
						task.wait(0.2)
						local success, err = pcall(function()
							GuiService.SelectedObject = accept
						end)

						if success then
							VIM:SendKeyEvent(true, 13, false, game)
							task.wait()
							VIM:SendKeyEvent(false, 13, false, game)
						else
							warn("‚ö†Ô∏è ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á SelectedObject ‡πÑ‡∏î‡πâ: " .. tostring(err))
						end
					until IsTradeDone or count >= maxAttempt

					if not IsTradeDone then
						warn("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏£‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î")
						return false
					end

					-- ‡∏Ç‡∏≤‡∏¢ FRUIT
					if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
						LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(87, 3, 0)
						task.wait(3)
					end

					local sellEvent = ReplicatedStorage:FindFirstChild("GameEvents")
						and ReplicatedStorage.GameEvents:FindFirstChild("Sell_Inventory")
					if sellEvent then
						sellEvent:FireServer()
						print("‚úÖ ‡∏Ç‡∏≤‡∏¢ FRUIT ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à")
					else
						warn("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Sell_Inventory RemoteEvent")
					end

					Trade += 1
					print("‚úÖ Trade ‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ó‡∏µ‡πà", Trade)
					return true
				end
			end
		end
	end
	return false
end

-- ‡∏•‡∏π‡∏õ‡∏£‡∏±‡∏ö‡πÄ‡∏ó‡∏£‡∏î
task.spawn(function()
	while Trade < LimitTrade do
		local success = TryAcceptGift()
		if not success then
			task.wait(1)
		end
	end

	-- ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏à‡∏∏‡∏î‡πÄ‡∏î‡∏¥‡∏°‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏£‡∏ö
	task.wait(2)
	if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
		LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(115, 3, -12)
	end
	print("üèÅ ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏∏‡∏î‡πÄ‡∏î‡∏¥‡∏°")
end)
